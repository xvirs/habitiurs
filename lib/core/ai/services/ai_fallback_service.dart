// lib/core/ai/services/ai_fallback_service.dart - COMPLETO
import 'package:habitiurs/core/ai/models/ai_response_model.dart';

import '../models/ai_request_model.dart';

/// Servicio que proporciona respuestas offline inteligentes
class AIFallbackService {
  
  Future<AIResponse> generateFallbackResponse(AIRequest request) async {
    // Simular delay para UX realista
    await Future.delayed(const Duration(milliseconds: 500));
    
    final content = _getFallbackContent(request.type, request.metadata);
    
    return AIResponse(
      id: 'fallback_${DateTime.now().millisecondsSinceEpoch}',
      content: content,
      type: request.type,
      metadata: request.metadata,
      timestamp: DateTime.now(),
      isFromAI: false, // Importante: marcar como fallback
      confidence: AIResponseConfidence(
        score: 0.6,
        level: 'medium',
        factors: ['offline_mode', 'template_based'],
      ),
    );
  }

  String _getFallbackContent(AIRequestType type, Map<String, dynamic> metadata) {
    switch (type) {
      case AIRequestType.habitEvaluation:
        return _getHabitEvaluationFallback(metadata);
      case AIRequestType.habitAnalysis:
        return _getHabitAnalysisFallback(metadata);
      case AIRequestType.habitSuggestion:
        return _getHabitSuggestionFallback(metadata);
      case AIRequestType.statisticsAnalysis:
        return _getStatsAnalysisFallback(metadata);
      case AIRequestType.successPrediction:
        return _getPredictionFallback(metadata);
      case AIRequestType.trendAnalysis:
        return _getTrendAnalysisFallback(metadata);
      case AIRequestType.personalRecommendation:
        return _getPersonalRecommendationFallback(metadata);
      case AIRequestType.motivationalMessage:
        return _getMotivationalMessageFallback(metadata);
      case AIRequestType.generalAdvice:
        return _getGeneralAdviceFallback(metadata);
    }
  }

  // HABITS FALLBACKS
  String _getHabitEvaluationFallback(Map<String, dynamic> metadata) {
    final fallbacks = [
      '‚úÖ H√°bito bien estructurado y espec√≠fico.\nüí° Considera a√±adir un horario espec√≠fico para mayor consistencia.\nüéØ Probabilidad de √©xito: Alta',
      '‚úÖ Objetivo claro y medible.\nüí° Prueba vincularlo con una rutina existente para facilitar la adopci√≥n.\nüéØ Probabilidad de √©xito: Media-Alta',
      '‚úÖ Enfoque realista y sostenible.\nüí° Reduce la complejidad inicial si es necesario.\nüéØ Probabilidad de √©xito: Media',
      '‚úÖ Buena intenci√≥n y claridad.\nüí° Aseg√∫rate de que sea espec√≠fico y medible.\nüéØ Probabilidad de √©xito: Media',
      '‚úÖ H√°bito alcanzable y pr√°ctico.\nüí° Define cu√°ndo y d√≥nde lo realizar√°s exactamente.\nüéØ Probabilidad de √©xito: Alta',
    ];
    return fallbacks[DateTime.now().millisecond % fallbacks.length];
  }

  String _getHabitAnalysisFallback(Map<String, dynamic> metadata) {
    final completionRates = metadata['completion_rates'] as Map<String, dynamic>?;
    final strugglingHabits = metadata['struggling_habits'] as List<dynamic>?;
    
    if (strugglingHabits?.isNotEmpty == true) {
      return 'Bas√°ndome en tus patrones, los h√°bitos "${strugglingHabits!.join(', ')}" necesitan atenci√≥n extra. Te sugiero reducir su complejidad y establecer recordatorios espec√≠ficos. Enf√≥cate en consistencia antes que en perfecci√≥n.';
    } else {
      return 'Bas√°ndome en tus patrones, tu consistencia mejora con rutinas matutinas. Te sugiero concentrarte en 2-3 h√°bitos clave y establecer recordatorios espec√≠ficos para los d√≠as m√°s desafiantes.';
    }
  }

  String _getHabitSuggestionFallback(Map<String, dynamic> metadata) {
    final suggestions = [
      'Para mejorar tu consistencia, prueba: 1) Reduce el tiempo inicial de cada h√°bito, 2) Agrupa h√°bitos similares en la misma sesi√≥n, 3) Establece un recordatorio visual en tu entorno.',
      'Estrategias para el √©xito: 1) Usa la regla de 2 minutos para empezar, 2) Vincula h√°bitos nuevos con rutinas existentes, 3) Celebra peque√±os progresos para mantener motivaci√≥n.',
      'Recomendaciones personalizadas: 1) Identifica tu horario de mayor energ√≠a, 2) Prepara tu entorno la noche anterior, 3) Ten un plan B para d√≠as dif√≠ciles.',
    ];
    return suggestions[DateTime.now().second % suggestions.length];
  }

  // STATISTICS FALLBACKS
  String _getStatsAnalysisFallback(Map<String, dynamic> metadata) {
    final monthlyRate = metadata['monthly_completion_rate'] as double?;
    
    if (monthlyRate != null) {
      if (monthlyRate >= 70) {
        return 'Tu progreso muestra una excelente tendencia con ${monthlyRate.toInt()}% de constancia. Las semanas de mayor √©xito coinciden con rutinas estructuradas. Mant√©n este momentum y considera agregar gradualmente nuevos desaf√≠os.';
      } else if (monthlyRate >= 50) {
        return 'Tu progreso del ${monthlyRate.toInt()}% es s√≥lido y muestra potencial de mejora. Identifica qu√© factores contribuyen a tus d√≠as exitosos y trata de replicar esas condiciones m√°s frecuentemente.';
      } else {
        return 'Con ${monthlyRate.toInt()}% de constancia, hay oportunidad de crecimiento. Enf√≥cate en simplificar tus h√°bitos y establecer rutinas m√°s peque√±as pero consistentes. El progreso incremental es clave.';
      }
    }
    
    return 'Tu progreso muestra una tendencia positiva. Las semanas con mayor √©xito coinciden con rutinas m√°s estructuradas. Enf√≥cate en replicar esas condiciones exitosas y mant√©n expectativas realistas.';
  }

  String _getPredictionFallback(Map<String, dynamic> metadata) {
    final currentTrend = metadata['current_trend'] as double?;
    final dataPoints = metadata['data_points_count'] as int?;
    
    if (currentTrend != null && currentTrend > 0) {
      return 'Con tu tendencia actual positiva (+${currentTrend.toStringAsFixed(1)}%), tienes buenas probabilidades de mantener el progreso. Contin√∫a con tu rutina actual y ajusta gradualmente si es necesario.';
    } else if (currentTrend != null && currentTrend < 0) {
      return 'Tu tendencia muestra una leve disminuci√≥n (${currentTrend.toStringAsFixed(1)}%). Es normal tener fluctuaciones. Revisa qu√© cambi√≥ en tu rutina y considera simplificar temporalmente tus h√°bitos.';
    }
    
    return 'Con tu tendencia actual, tienes buenas probabilidades de mantener el progreso. Los h√°bitos m√°s nuevos necesitan atenci√≥n extra. Considera ajustar metas si la constancia baja del 60%.';
  }

  String _getTrendAnalysisFallback(Map<String, dynamic> metadata) {
    final trendDirection = metadata['trend_direction'] as String?;
    
    if (trendDirection == 'improving') {
      return 'Tu patr√≥n muestra una mejora consistente a lo largo del tiempo. Los factores clave incluyen rutinas matutinas y preparaci√≥n previa. Mant√©n estos elementos y escala gradualmente.';
    } else if (trendDirection == 'declining') {
      return 'Tu patr√≥n muestra algunos desaf√≠os recientes. Los fines de semana y cambios de rutina son puntos d√©biles comunes. Prepara estrategias espec√≠ficas para estos momentos vulnerables.';
    }
    
    return 'Tu patr√≥n de constancia muestra mejora gradual. Los fines de semana son tu punto m√°s d√©bil. Te sugiero preparar estrategias espec√≠ficas para mantener momentum durante esos d√≠as.';
  }

  // AI ASSISTANT FALLBACKS
  String _getPersonalRecommendationFallback(Map<String, dynamic> metadata) {
    final performanceLevel = metadata['performance_level'] as String?;
    final currentStreak = metadata['current_streak'] as int?;
    
    if (performanceLevel == 'excellent') {
      return '¬°Excelente trabajo! Tu consistencia es admirable. Para mantener este nivel, considera variar ocasionalmente tus rutinas para evitar monoton√≠a y celebra tus logros regularmente.';
    } else if (performanceLevel == 'good') {
      return 'Vas por buen camino. Tu progreso es s√≥lido y constante. Para el siguiente nivel, enf√≥cate en optimizar tu rutina matutina y prepara estrategias para d√≠as desafiantes.';
    } else if (currentStreak != null && currentStreak > 0) {
      return 'Tu racha de ${currentStreak} d√≠as muestra compromiso real. Los h√°bitos se est√°n consolidando. Mant√©n la simplicidad y enf√≥cate en aparecer todos los d√≠as, incluso en versiones m√≠nimas.';
    }
    
    final fallbacks = [
      'Recuerda que los h√°bitos peque√±os y consistentes superan a los grandes y espor√°dicos. Si has fallado algunos d√≠as, simplemente vuelve a empezar ma√±ana. Lo importante es la tendencia general, no la perfecci√≥n absoluta.',
      'Identifica qu√© est√° funcionando bien en tus h√°bitos actuales y trata de aplicar esas mismas estrategias a los h√°bitos que te cuestan m√°s trabajo. A menudo, el √©xito en un √°rea puede transferirse a otras.',
      'Considera revisar tus h√°bitos actuales. ¬øSiguen siendo relevantes para tus objetivos? A veces es mejor enfocarse en 2-3 h√°bitos importantes que intentar mantener muchos a medias. La calidad supera a la cantidad.',
    ];
    return fallbacks[DateTime.now().second % fallbacks.length];
  }

  String _getMotivationalMessageFallback(Map<String, dynamic> metadata) {
    final encouragementType = metadata['encouragement_type'] as String?;
    
    switch (encouragementType) {
      case 'celebration':
        return '¬°Incre√≠ble progreso! Tu dedicaci√≥n est√° dando frutos. Cada d√≠a que apareces est√°s construyendo una versi√≥n m√°s fuerte de ti mismo. ¬°Sigue brillando!';
      case 'recovery':
        return 'Los altibajos son parte del proceso. Lo importante no es nunca fallar, sino qu√© tan r√°pido te levantas. Hoy es una nueva oportunidad para volver a empezar.';
      case 'motivation':
        return 'Cada peque√±o paso cuenta. No subestimes el poder de acciones simples y constantes. Est√°s m√°s cerca de tus objetivos de lo que crees.';
      default:
        return '¬°Cada d√≠a que apareces est√°s construyendo la versi√≥n m√°s fuerte de ti mismo! El progreso no siempre es lineal, pero tu compromiso constante es lo que marca la diferencia real.';
    }
  }

  String _getGeneralAdviceFallback(Map<String, dynamic> metadata) {
    return 'Contin√∫a enfoc√°ndote en el progreso constante. Peque√±os pasos diarios construyen grandes transformaciones a largo plazo. Celebra cada victoria, por peque√±a que sea.';
  }
}